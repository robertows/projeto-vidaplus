// Autor: RU:4334534 ROBERTO CARVALHO

// Importa o m√≥dulo mysql2/promise para trabalhar com MySQL de forma ass√≠ncrona
const mysql = require('mysql2/promise'); 

// Carrega as vari√°veis de ambiente do arquivo .env
require('dotenv').config();

// Debug opcional para ver os dados carregados do .env
console.log('üîå Conectando com DB:', {
    host: process.env.DB_HOST,
    user: process.env.DB_USER,
    database: process.env.DB_NAME,
    port: process.env.DB_PORT
});

// Cria um pool de conex√µes MySQL com as configura√ß√µes fornecidas
const pool = mysql.createPool({
    // Host do banco de dados, usa vari√°vel de ambiente ou 'localhost' como padr√£o
    host: process.env.DB_HOST || 'localhost',
    // Usu√°rio do banco de dados, usa vari√°vel de ambiente ou 'root' como padr√£o
    user: process.env.DB_USER || 'root',
    // Senha do banco de dados, usa vari√°vel de ambiente ou vazio como padr√£o
    password: process.env.DB_PASSWORD || '',
    // Nome do banco de dados, usa vari√°vel de ambiente ou 'vidaplus_db' como padr√£o
    database: process.env.DB_NAME || 'vidaplus_db',
    // Porta do banco de dados, converte a vari√°vel de ambiente para n√∫mero ou usa 3306 como padr√£o
    port: Number(process.env.DB_PORT) || 3306, // üëà convers√£o obrigat√≥ria
    // Aguarda por conex√µes dispon√≠veis no pool
    waitForConnections: true,
    // Define o limite m√°ximo de 10 conex√µes simult√¢neas
    connectionLimit: 10,
    // Define que n√£o h√° limite para a fila de espera de conex√µes
    queueLimit: 0
});

// Exporta o pool de conex√µes para ser utilizado em outros m√≥dulos do projeto
module.exports = pool;


